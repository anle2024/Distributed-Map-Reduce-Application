name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11, 3.12]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pytest pytest-cov

      - name: Run tests
        run: |
          python -m pytest tests/ -v --cov=mapreduce --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  demo:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .

      - name: Run demo
        run: |
          python examples/demo.py

      - name: Test manual execution
        run: |
          # Create test files
          echo "hello world hello python test" > test1.txt
          echo "python programming distributed systems" > test2.txt

          # Start coordinator in background
          ./bin/mr-coordinator 2 test1.txt test2.txt &
          COORD_PID=$!

          # Wait for coordinator to start
          sleep 2

          # Start worker
          timeout 10s ./bin/mr-worker apps/word_count.py || true

          # Clean up
          kill $COORD_PID 2>/dev/null || true
          wait $COORD_PID 2>/dev/null || true

          # Check if output files were created
          ls -la mr-out-* || echo "No output files found"

          # Clean up test files
          rm -f test1.txt test2.txt mr-out-* coordinator_info.txt

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install linting dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8 isort mypy

      - name: Run black (code formatting check)
        run: |
          black --check --diff src/ apps/ tests/ examples/

      - name: Run flake8 (linting)
        run: |
          flake8 src/ apps/ tests/ examples/ --max-line-length=88 --extend-ignore=E203,W503

      - name: Run isort (import sorting check)
        run: |
          isort --check-only --diff src/ apps/ tests/ examples/

      - name: Run mypy (type checking)
        run: |
          mypy src/ --ignore-missing-imports || true  # Allow failures for now

  package:
    runs-on: ubuntu-latest
    needs: [test, demo]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: |
          python -m build

      - name: Check package
        run: |
          twine check dist/*

      - name: Test package installation
        run: |
          pip install dist/*.whl
          mr-coordinator --help || echo "Help command not implemented yet"
